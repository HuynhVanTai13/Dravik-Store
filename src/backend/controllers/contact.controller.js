// src/backend/controllers/contact.controller.js
import ContactMessage from '../models/ContactMessage.js';
import nodemailer from 'nodemailer';

export const createContact = async (req, res) => {
  const { from_name, from_email, phone, message } = req.body || {};

  if (!from_name || !from_email || !phone || !message) {
    return res.status(400).json({ message: 'Thi·∫øu th√¥ng tin b·∫Øt bu·ªôc.' });
  }

  try {
    const doc = await ContactMessage.create({
      from_name,
      from_email,
      phone,
      message,
      ip: req.ip,
      userAgent: req.get('user-agent'),
    });

    const {
      SMTP_HOST, SMTP_PORT, SMTP_SECURE,
      SMTP_USER, SMTP_PASS, SMTP_FROM,
      CONTACT_RECEIVER
    } = process.env;

    if (!SMTP_HOST || !SMTP_USER || !SMTP_PASS) {
      console.warn('‚ö†Ô∏è Ch∆∞a c·∫•u h√¨nh SMTP ƒë·∫ßy ƒë·ªß.');
      return res.status(201).json({
        message: 'ƒê√£ l∆∞u li√™n h·ªá. (Ch∆∞a c·∫•u h√¨nh SMTP n√™n ch∆∞a g·ª≠i email)',
        id: doc._id,
      });
    }

    const transporter = nodemailer.createTransport({
      host: SMTP_HOST,
      port: Number(SMTP_PORT || 587),
      secure: String(SMTP_SECURE).toLowerCase() === 'true',
      auth: { user: SMTP_USER, pass: SMTP_PASS },
      logger: true,           // <-- b·∫≠t log
    });

    // ki·ªÉm tra k·∫øt n·ªëi SMTP
    try {
      await transporter.verify();
      console.log('‚úÖ SMTP verify OK');
    } catch (e) {
      console.error('‚ùå SMTP verify FAILED:', e?.message || e);
      return res.status(500).json({ message: 'SMTP_VERIFY_FAILED', error: e?.message || String(e) });
    }

    const to = CONTACT_RECEIVER || 'dravikstore@gmail.com';
    const subject = `Li√™n h·ªá m·ªõi: ${from_name} (${phone})`;

    try {
      await transporter.sendMail({
        from: SMTP_FROM || `"Contact Form" <${SMTP_USER}>`,
        to,
        subject,
        replyTo: `${from_name} <${from_email}>`,
        text:
`T√™n: ${from_name}
Email: ${from_email}
SƒêT: ${phone}

N·ªôi dung:
${message}
`,
        html:
`<div style="font-family:Arial,sans-serif;font-size:14px;line-height:1.6">
  <p><b>T√™n:</b> ${from_name}</p>
  <p><b>Email:</b> ${from_email}</p>
  <p><b>SƒêT:</b> ${phone}</p>
  <p><b>N·ªôi dung:</b><br/>${message.replace(/\n/g, '<br/>')}</p>
  <hr/>
  <p style="color:#666">ID: ${doc._id} ‚Ä¢ IP: ${doc.ip || ''}</p>
</div>`
      });
      console.log('üìß ƒê√£ g·ª≠i email t·ªõi:', to);
    } catch (e) {
      console.error('‚ùå SENDMAIL FAILED:', e?.message || e);
      return res.status(500).json({ message: 'MAIL_SEND_FAILED', error: e?.message || String(e) });
    }

    return res.status(201).json({ message: 'ƒê√£ g·ª≠i li√™n h·ªá & email th√†nh c√¥ng', id: doc._id });
  } catch (err) {
    console.error('createContact error:', err);
    return res.status(500).json({ message: 'L·ªói m√°y ch·ªß', error: err.message });
  }
};
